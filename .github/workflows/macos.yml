name: macOS CI

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'AUTHORS'
      - 'ChangeLog'
      - 'COPYING.GPL'
      - 'LICENSE'
      - 'NEWS'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'AUTHORS'
      - 'ChangeLog'
      - 'COPYING.GPL'
      - 'LICENSE'
      - 'NEWS'

env:
  LANG: en_US.UTF-8
  TZ: UTC

jobs:
  macos:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13             # Intel x86_64
          - macos-latest         # Apple Silicon ARM64
        compiler:
          - cc: gcc-11
            cxx: g++-11
          - cc: gcc-12
            cxx: g++-12
          - cc: clang
            cxx: clang++
        build_type:
          - name: default
            configure_flags: ""
          - name: debug
            configure_flags: "--enable-debug"

    name: macOS ${{ matrix.os }} ${{ matrix.compiler.cc }} (${{ matrix.build_type.name }})

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            /Users/runner/Library/Caches/ccache
            /Users/runner/Library/Preferences/ccache/ccache.conf
          key: ${{ runner.os }}-${{ runner.arch }}-macos-${{ matrix.compiler.cc }}-${{ matrix.build_type.name }}-${{ hashFiles('.github/workflows/macos.yml') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-macos-${{ matrix.compiler.cc }}-${{ matrix.build_type.name }}

      - name: Install dependencies
        run: |
          brew install autoconf automake ccache libpcap pkg-config
          # Install GCC if needed
          if [[ "${{ matrix.compiler.cc }}" =~ ^gcc- ]]; then
            brew install ${{ matrix.compiler.cc }}
          fi

      - name: Ccache stats before builds
        run: |
          ccache -s

      - name: Build with ${{ matrix.compiler.cc }} (${{ matrix.build_type.name }})
        run: |
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          case "${{ matrix.compiler.cc }}" in
            clang)
              CC=clang
              CXX=clang++
              export CFLAGS="-Werror -Wall -Wno-deprecated-declarations"
              export CXXFLAGS="-Werror -Wall -Wno-deprecated-declarations"
              ;;
            gcc-*)
              CC=${{ matrix.compiler.cc }}
              CXX=${{ matrix.compiler.cxx }}
              export CFLAGS="-Werror -Wall -Wno-unused-result"
              export CXXFLAGS="-Werror -Wall -Wno-unused-result"
              ;;
          esac
          export CC="ccache $CC"
          export CXX="ccache $CXX"
          echo "::group::autoreconf"
          autoreconf -vif
          echo "::endgroup::"
          echo "::group::configure"
          ./configure ${{ matrix.build_type.configure_flags }} || { cat config.log; exit 1; }
          echo "::endgroup::"
          echo "::group::build"
          make -j$(sysctl -n hw.ncpu)
          echo "::endgroup::"
          echo "::group::test"
          ./darkstat --help
          echo "::endgroup::"

      - name: Ccache stats after builds
        run: |
          ccache -s

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.os }}-${{ matrix.compiler.cc }}-${{ matrix.build_type.name }}
          path: |
            darkstat
            darkstat.8
